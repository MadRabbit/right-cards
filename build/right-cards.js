/**
 * Right-Cards is a playing cards framework implemented with RightJS and CSS
 *
 * All the source codes are licensed under the terms of the MIT License
 *   http://github.com/MadRabbit/right-cards
 *
 * @copyright 2009 Nikolay V. Nemshilov aka St.
 */
var RC={};RC.Card=new Class(Observer,{extend:{EVENTS:$w('click'),SUITS:{spades:2660,hearts:2665,diamonds:2666,clubs:2663},RANKS:{2:'Two',3:'Three',4:'Four',5:'Five',6:'Six',7:'Seven',8:'Eight',9:'Nine',10:'Ten',J:'Jack',Q:'Queen',K:'King',A:'Ace'},SIZES:['tiny','small','normal','big'],DEFAULT_SIZE:'normal'},suit:null,rank:null,size:null,initialize:function(r,a,s){this.rank=r;this.suit=a;this.build();this.setSize(s);this.$super();this.element.on('click',this.click.bind(this))},open:function(){this.back.hide();this.face.show();return this},hide:function(){this.face.hide();this.back.show();return this},flip:function(){if(this.opened())this.hide();else this.open();return this},opened:function(){return this.back.hidden()},hidden:function(){return this.face.hidden()},setSize:function(s){this.element.removeClass('rc-tiny').removeClass('rc-small').removeClass('rc-normal').removeClass('rc-big').addClass('rc-'+(s||RC.Card.DEFAULT_SIZE));return this},build:function(){this.element=$E('div',{'class':'rc-card rc-rank-'+this.rank+' rc-'+this.suit});this.back=$E('div',{'class':'rc-back'}).insertTo(this.element).hide();this.face=$E('div',{'class':'rc-face'}).insertTo(this.element);this.back.insert('<div class="rc-back-decoration"></div>');var s='&#x'+RC.Card.SUITS[this.suit]+';';this.face.insert('<div class="rc-face-name">'+this.rank+'<span class="rc-suit">'+s+'</span></div>');if(this.rank=='A')this.face.insert('<div class="rc-card-decor"><div class="rc-card-picture">'+s+'</div></div>');else if(this.rank.match(/\d+/))this.rank.toInt().times(function(a){this.face.insert('<div class="rc-card-dot rc-card-dot-'+(a+1)+'">'+s+'</div>')},this);else this.face.insert('<div class="rc-card-decor"><div class="rc-card-picture"></div></div>')}});RC.Deck=new Class({initialize:function(){this.cards=[];for(var r in RC.Card.RANKS)for(var s in RC.Card.SUITS)this.cards.push(new RC.Card(r,s))},shuffle:function(){this.cards=this.cards.shuffle();return this},each:function(){this.cards.each.apply(this.cards,arguments);return this},pull:function(){return this.cards.pull()}});